var background=function(){"use strict";var t,c;function u(o){return o==null||typeof o=="function"?{main:o}:o}const a=((c=(t=globalThis.browser)==null?void 0:t.runtime)==null?void 0:c.id)==null?globalThis.chrome:globalThis.browser;async function l(){await chrome.offscreen.hasDocument()&&await chrome.offscreen.closeDocument(),chrome.offscreen.createDocument({url:"/offscreen.html",reasons:[chrome.offscreen.Reason.BLOBS],justification:"URL not found"})}const f=u(()=>{console.log("Hello background!",{id:a.runtime.id}),l(),chrome.storage.local.onChanged.addListener(async({enabled:o})=>{const[n]=await chrome.tabs.query({active:!0,currentWindow:!0,windowType:"normal"});if(!n||!n.id)return console.error("tab not found");await chrome.scripting.executeScript({target:{tabId:n.id},func:s=>{var i;console.log("toggled:",s),(i=document.querySelector("ytd-comments#comments"))==null||i.classList.toggle("judol-off",!s)},args:[o.newValue]})})});function m(){}function e(o,...n){}const d={debug:(...o)=>e(console.debug,...o),log:(...o)=>e(console.log,...o),warn:(...o)=>e(console.warn,...o),error:(...o)=>e(console.error,...o)};let r;try{r=f.main(),r instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(o){throw d.error("The background crashed on startup!"),o}return r}();
background;
